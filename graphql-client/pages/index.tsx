import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import { useState } from 'react';

import { useQuery, useMutation } from '@apollo/client';
import { POST_QUERY, CREATE_POST_QUERY } from '../graphql/query/post';
import { Post, CreatedPost, CreatePostInput } from '../graphql/types/post';


const Home: NextPage = () => {
  const { loading, error, data } = useQuery<Post>(POST_QUERY, { variables: { postId: 1 } });
  const [createPost, createPostMutationResult] = useMutation<CreatedPost, CreatePostInput>(CREATE_POST_QUERY);

  const [createPostParam, setCreatePostParam] = useState<CreatePostInput>();

  if (loading) return <p>Loading...</p>;
  if (error) return <p>Error: {JSON.stringify(error)}</p>;

  if (!data) return null;

  const { post } = data;

  const handleCreatePostChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setCreatePostParam({
      ...createPostParam,
      [name]: value
    })
  }

  const submitCreatePost = async () => {
    if (!createPostParam?.title || !createPostParam.body) return;
    await createPost({
      variables: {
        input: {
          title: createPostParam.title,
          body: createPostParam.body,
        }
      }
    })

    const error = createPostMutationResult.error;
    console.log(error);
  }

  return (
    <div className={styles.container}>
      <span className="form-field">
        <input name="title" onChange={handleCreatePostChange} />
      </span>
      <span className="form-field">
        <textarea
          name="body"
          rows={10}
          onChange={handleCreatePostChange}
        />
      </span>
      <div onClick={submitCreatePost}>CreatePost</div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p>
          {post.title}
          {post.id}
          {post.body}
          {post.createdAt}
          {post.updatedAt}
        </p>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
